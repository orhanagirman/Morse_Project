// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "01/20/2020 23:34:27"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          morseproject3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module morseproject3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg H;
reg clock;
reg in;
reg reset_all;
// wires                                               
wire [29:0] counter_out0;
wire [29:0] counter_out1;
wire d00;
wire d11;
wire d22;
wire d33;
wire d44;
wire d55;
wire d66;
wire d77;
wire [1:0] outb;
wire [9:0] register;

// assign statements (if any)                          
morseproject3 i1 (
// port map - connection between master ports and signals/registers   
	.H(H),
	.clock(clock),
	.counter_out0(counter_out0),
	.counter_out1(counter_out1),
	.d00(d00),
	.d11(d11),
	.d22(d22),
	.d33(d33),
	.d44(d44),
	.d55(d55),
	.d66(d66),
	.d77(d77),
	.in(in),
	.outb(outb),
	.register(register),
	.reset_all(reset_all)
);
initial 
begin 
#1000000 $finish;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #10000 1'b1;
	#10000;
end 

// in
initial
begin
	in = 1'b0;
	in = #50000 1'b1;
	in = #140000 1'b0;
	in = #120000 1'b1;
	in = #170000 1'b0;
end 

// H
initial
begin
	H = 1'b0;
	H = #610000 1'b1;
	H = #180000 1'b0;
end 

// reset_all
initial
begin
	reset_all = 1'b0;
	reset_all = #900000 1'b1;
end 
endmodule

